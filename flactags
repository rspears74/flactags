#!/usr/bin/python3

from mutagen import flac
import os, subprocess, sys, argparse

def change_album(new_album):
    for f in filter(lambda x: x.endswith('flac'), os.listdir('.')):
        file_flac = flac.FLAC(f)
        file_flac.tags['ALBUM'] = new_album
        file_flac.save()

def change_artist(new_artist):
    for f in filter(lambda x: x.endswith('flac'), os.listdir('.')):
        file_flac = flac.FLAC(f)
        file_flac.tags['ARTIST'] = new_artist
        file_flac.save()

def change_titles():
    for f in filter(lambda x: x.endswith('flac'), os.listdir('.')):
        file_flac = flac.FLAC(f)
        try:
            file_title = file_flac.tags['TITLE'][0]
            print()
            print(f)
            print(file_title)
            new_title = input("Edit title? (Press enter to keep existing title) > ")
            if new_title != '':
                file_flac.tags['TITLE'] = new_title
                file_flac.save()
        except KeyError:
            print()
            print(f)
            print("No 'TITLE' tag found.")
            new_title = input("Assign a title > ")
            file_flac.tags['TITLE'] = new_title
            file_flac.save()

def delete_titles():
    for f in filter(lambda x: x.endswith('flac'), os.listdir('.')):
        file_flac = flac.FLAC(f)
        del file_flac.tags['TITLE']
        file_flac.save()

def track_numbers():
    for f in filter(lambda x: x.endswith('flac'), os.listdir('.')):
        file_flac = flac.FLAC(f)
        try:
            track_num = file_flac.tags['TRACKNUMBER'][0]
            print()
            print(f)
            try:
                print(file_flac['TITLE'][0])
            except KeyError:
                pass
            print("Track number {}".format(track_num))
            track_num = input("Edit track number? (Press enter to keep existing) > ")
            if track_num != '':
                file_flac.tags['TRACKNUMBER'] = track_num
                file_flac.save()
        except KeyError:
            print()
            print(f)
            try:
                print(file_flac['TITLE'][0])
            except KeyError:
                pass
            print("No 'TRACKNUMBER' tag found.")
            track_num = input("Assign a track number > ")
            file_flac.tags['TRACKNUMBER'] = track_num
            file_flac.save()

def disc_numbers():
    for f in filter(lambda x: x.endswith('flac'), os.listdir('.')):
        file_flac = flac.FLAC(f)
        try:
            disc_num = file_flac.tags['DISCNUMBER'][0]
            print()
            print(f)
            try:
                print(file_flac['TITLE'][0])
            except KeyError:
                pass
            print("Disc number {}".format(disc_num))
            disc_num = input("Edit disc number? (Press enter to keep existing) > ")
            if disc_num != '':
                file_flac.tags['DISCNUMBER'] = disc_num
                file_flac.save()
        except KeyError:
            print()
            print(f)
            try:
                print(file_flac['TITLE'][0])
            except KeyError:
                pass
            print("No 'DISCNUMBER' tag found.")
            disc_num = input("Assign a disc number > ")
            file_flac.tags['DISCNUMBER'] = disc_num
            file_flac.save()

parser = argparse.ArgumentParser()

parser.add_argument('--album', '-l',
    help='change album title of all files')
parser.add_argument('--artist', '-r',
    help='change artist of all files')
parser.add_argument('--titles', '-t',
    action='store_true',
    help='edit song titles')
parser.add_argument('--del-titles', '-d',
    action='store_true',
    help='delete all song titles')
parser.add_argument('--track-num', '-n',
    action='store_true',
    help='edit track numbers')
parser.add_argument('--disc-num', '-N',
    action='store_true',
    help='edit disc numbers')

args = parser.parse_args()

if args.artist is not None:
    change_artist(args.artist)
if args.album is not None:
    change_album(args.album)
if args.del_titles:
    delete_titles()
if args.titles:
    change_titles()
if args.track_num:
    track_numbers()
if args.disc_num:
    disc_numbers()