#!/usr/bin/python3

from mutagen import flac
import os, subprocess, sys, argparse

def get_flacs():
    return sorted(filter(lambda x: x.endswith('flac'), os.listdir('.')))

def print_all_props(f):
    file_flac = flac.FLAC(f)
    print(f)
    for k, v in file_flac.tags.items():
        print("{}: {}".format(k, v))
    print()

def print_props_all_files():
    for f in get_flacs():
        print_all_props(f)

def change_for_all(param, value):
    for f in get_flacs():
        file_flac = flac.FLAC(f)
        file_flac.tags[param] = value
        file_flac.save()

def change_one_by_one(param):
    print("Change {}".format(param))
    print()
    for f in get_flacs():
        file_flac = flac.FLAC(f)
        try:
            value = file_flac.tags[param][0]
            print()
            print_all_props(f)
            value = input("Edit {}? (Press enter to keep existing) > ".format(param))
            if value != '':
                file_flac.tags[param] = value
                file_flac.save()
        except KeyError:
            print()
            print_all_props(f)
            print("No {} tag found.".format(param))
            value = input("Assign a {} > ".format(param))
            file_flac.tags[param] = value
            file_flac.save()

def delete_param(param):
    for f in get_flacs():
        file_flac = flac.FLAC(f)
        del file_flac.tags[param]
        file_flac.save()

parser = argparse.ArgumentParser()

parser.add_argument('--album', '-l',
    help='change album title of all files')
parser.add_argument('--artist', '-r',
    help='change artist of all files')
parser.add_argument('--titles', '-t',
    action='store_true',
    help='edit song titles')
parser.add_argument('--del-titles', '-d',
    action='store_true',
    help='delete all song titles')
parser.add_argument('--track-num', '-n',
    action='store_true',
    help='edit track numbers')
parser.add_argument('--disc-num', '-N',
    action='store_true',
    help='edit disc numbers')
parser.add_argument('--print-all', '-p',
    action='store_true',
    help='print all tags')

args = parser.parse_args()

if args.artist is not None:
    change_for_all('ARTIST', args.artist)
if args.album is not None:
    change_for_all('ALBUM', args.album)
if args.del_titles:
    delete_param('TITLE')
if args.titles:
    change_one_by_one('TITLE')
if args.track_num:
    change_one_by_one('TRACKNUMBER')
if args.disc_num:
    change_one_by_one('DISCNUMBER')
if args.print_all:
    print_props_all_files()